// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementAPI.Data;

#nullable disable

namespace AutodocRestApi.Migrations.MSSqlDb
{
    [DbContext(typeof(MSSqlDbContext))]
    [Migration("20241128145248_InitialMSSqlMigration")]
    partial class InitialMSSqlMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManagementAPI.Models.FileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("FileTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileTaskId");

                    b.ToTable("FileAttachments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "example1.txt",
                            FilePath = "file1",
                            FileSize = 1024L,
                            FileTaskId = 1
                        },
                        new
                        {
                            Id = 2,
                            FileName = "example2.pdf",
                            FilePath = "file2",
                            FileSize = 2048L,
                            FileTaskId = 1
                        },
                        new
                        {
                            Id = 3,
                            FileName = "example3.docx",
                            FilePath = "file3",
                            FileSize = 512L,
                            FileTaskId = 2
                        });
                });

            modelBuilder.Entity("TaskManagementAPI.Models.FileTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("FileTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 11, 28, 14, 52, 47, 899, DateTimeKind.Utc).AddTicks(9162),
                            IsCompleted = false,
                            Name = "Initial Task"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 11, 27, 14, 52, 47, 899, DateTimeKind.Utc).AddTicks(9164),
                            IsCompleted = true,
                            Name = "Another Task"
                        });
                });

            modelBuilder.Entity("TaskManagementAPI.Models.FileAttachment", b =>
                {
                    b.HasOne("TaskManagementAPI.Models.FileTask", "FileTask")
                        .WithMany("FileAttachments")
                        .HasForeignKey("FileTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileTask");
                });

            modelBuilder.Entity("TaskManagementAPI.Models.FileTask", b =>
                {
                    b.Navigation("FileAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
