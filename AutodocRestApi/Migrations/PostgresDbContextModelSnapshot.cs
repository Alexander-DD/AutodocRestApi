// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagementAPI.Data;

#nullable disable

namespace AutodocRestApi.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    partial class PostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskManagementAPI.Models.FileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("FileTaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FileTaskId");

                    b.ToTable("FileAttachments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "example1.txt",
                            FilePath = "file1",
                            FileSize = 1024L,
                            FileTaskId = 1
                        },
                        new
                        {
                            Id = 2,
                            FileName = "example2.pdf",
                            FilePath = "file2",
                            FileSize = 2048L,
                            FileTaskId = 1
                        },
                        new
                        {
                            Id = 3,
                            FileName = "example3.docx",
                            FilePath = "file3",
                            FileSize = 512L,
                            FileTaskId = 2
                        });
                });

            modelBuilder.Entity("TaskManagementAPI.Models.FileTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("FileTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 11, 28, 14, 1, 54, 826, DateTimeKind.Utc).AddTicks(3111),
                            IsCompleted = false,
                            Name = "Initial Task"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 11, 27, 14, 1, 54, 826, DateTimeKind.Utc).AddTicks(3114),
                            IsCompleted = true,
                            Name = "Another Task"
                        });
                });

            modelBuilder.Entity("TaskManagementAPI.Models.FileAttachment", b =>
                {
                    b.HasOne("TaskManagementAPI.Models.FileTask", "FileTask")
                        .WithMany("FileAttachments")
                        .HasForeignKey("FileTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileTask");
                });

            modelBuilder.Entity("TaskManagementAPI.Models.FileTask", b =>
                {
                    b.Navigation("FileAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
